stages:
  - build
  - cleanup_build
  - deploy
  - cleanup



build_and_test_job:
  stage: build
  only:
    - develop 
    - release
    - master
    - github_master
    - features/ci_test
  before_script:
    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD
    - head -n -1 .gitmodules > gitmodules.txt.new && mv gitmodules.txt.new .gitmodules
    - echo -e "\turl = ../cpp-ethereum.git" | tee -a .gitmodules
    #- git clone https://github.com/LockTrip/Blockchain.git --recursive
    - git submodule update --init --recursive
    - cd ~
    - mkdir .locktrip
    - cd .locktrip
    - echo "rpcuser=user" >> locktrip.conf
    - echo "rpcpassword=password" >> locktrip.conf
    - echo "rpcport=13389" >> locktrip.conf
    - echo "rpccallowip=127.0.0.1" >> locktrip.conf
    - cat ~/.locktrip/locktrip.conf
    - pwd
    - echo $LD_LIBRARY_PATH
    - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib"
    - echo $LD_LIBRARY_PATH
    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD
    - git submodule update --init --recursive
    - apt-get update --yes
    - apt-get install --yes cmake
    - apt-get --yes install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils libboost-all-dev
    - apt-get --yes install software-properties-common
    - lsb_release -cs
    - wget http://download.oracle.com/berkeley-db/db-4.8.30.zip
    - apt-get install zip unzip
    - unzip db-4.8.30.zip
    - cd db-4.8.30
    - cd build_unix/
    - ../dist/configure --prefix=/usr/local --enable-cxx
    - make
    - make install
    # Qt GUI - Commented for CI/CD
    # apt-get --yes install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler qrencode
  script:
    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD
    - ./autogen.sh
    - ./configure
    - make -j2

    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD/test/functional/
    - ./test_runner.py qtum-8mb-block.py
    - ./test_runner.py receivedby.py
    - ./test_runner.py listtransactions.py
    - ./test_runner.py abandonconflict.py
    - ./test_runner.py fundrawtransaction.py 

    - ./test_runner.py qtum-call-empty-contract.py
    - ./test_runner.py qtum-dgp-block-size-restart.py
    - ./test_runner.py qtum-evm-globals.py
    - ./test_runner.py qtum-soft-block-gas-limits.py
    - ./test_runner.py qtum-spend-op-call.py
    - ./test_runner.py wallet.py
    - ./test_runner.py walletbackup.py
    - ./test_runner.py

cleanup_build_on_failure_job:
  stage: cleanup_build
  script:
    - rm -rf
  when: on_failure


gcloud_ubuntu_1_deploy_job:
  stage: deploy
  only:
    - develop 
    - release
    - master
    - github_master
    - features/ci_test
  variables:
     GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD
    - git submodule update --init --recursive
    - cd -
  script:
    - apt-get update --yes
    - apt-get --yes install python2.7
    - apt-get --yes install findutils
    - apt-get --yes install python-boto
    - apt-get --yes install python-pkg-resources
    - apt-get --yes install python-crcmod
    - wget -c http://archive.ubuntu.com/ubuntu/pool/universe/g/gce-compute-image-packages/python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb -O python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - dpkg -i python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - wget -c http://archive.canonical.com/ubuntu/pool/partner/g/google-cloud-sdk/google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb -O google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - export GPG_TTY=$(tty)
    - echo "export GPG_TTY=$(tty)" >> ~/.profile
    - echo $GLOUD_KEY > $UBUNTU_JSON
    - dpkg -i google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - gcloud auth activate-service-account --key-file $UBUNTU_JSON
    - head -n -2 ~/.profile > file.txt.new && mv file.txt.new ~/.profile
    - echo "tty -s && mesg n || true" | tee -a ~/.profile
    - echo "export GPG_TTY=not a tty" | tee -a ~/.profile
    - cat ~/.profile
    - gcloud compute --project $GCLOUD_PROJECT_ID ssh --zone $GCLOUD_VM_1_ZONE $GCLOUD_VM_1
    - whoami
    - pwd
    - apt-get --yes install ssh
    - ls -la ~/.ssh
    - ls -la /etc/ssh/
    - cat ~/.ssh/google_compute_engine
    - cat ~/.ssh/google_compute_engine.pub
    - ssh-keygen -f ~/.ssh/known_hosts
    - eval `ssh-agent -s`
    - ssh-add -k ~/.ssh/google_compute_engine
    - ssh -o StrictHostKeyChecking=no root@$UBUNTU_1_IP uptime
    - cat cd_gcloud_vm.sh | ssh -tt -i ~/.ssh/google_compute_engine.pub root@$UBUNTU_1_IP
    # start the node 1
# when: manual


gcloud_ubuntu_2_deploy_job:
  stage: deploy
  only:
    - develop 
    - release
    - master
    - github_master
    - features/ci_test
  variables:
     GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD
    - git submodule update --init --recursive
    - cd -
  script:
    - apt-get update --yes
    - apt-get --yes install python2.7
    - apt-get --yes install findutils
    - apt-get --yes install python-boto
    - apt-get --yes install python-pkg-resources
    - apt-get --yes install python-crcmod
    - wget -c http://archive.ubuntu.com/ubuntu/pool/universe/g/gce-compute-image-packages/python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb -O python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - dpkg -i python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - wget -c http://archive.canonical.com/ubuntu/pool/partner/g/google-cloud-sdk/google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb -O google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - export GPG_TTY=$(tty)
    - echo "export GPG_TTY=$(tty)" >> ~/.profile
    - dpkg -i google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - echo $GLOUD_KEY > $UBUNTU_JSON
    - gcloud auth activate-service-account --key-file $UBUNTU_JSON
    - head -n -2 ~/.profile > file.txt.new && mv file.txt.new ~/.profile
    - echo "tty -s && mesg n || true" | tee -a ~/.profile
    - echo "export GPG_TTY=not a tty" | tee -a ~/.profile
    - cat ~/.profile
    - gcloud compute --project $GCLOUD_PROJECT_ID ssh --zone $GCLOUD_VM_2_ZONE $GCLOUD_VM_2
    - whoami
    - pwd
    - apt-get --yes install ssh
    - ls -la ~/.ssh
    - ls -la /etc/ssh/
    - cat ~/.ssh/google_compute_engine
    - cat ~/.ssh/google_compute_engine.pub
    - ssh-keygen -f ~/.ssh/known_hosts
    - eval `ssh-agent -s`
    - ssh-add -k ~/.ssh/google_compute_engine
    - ssh -o StrictHostKeyChecking=no root@$UBUNTU_2_IP uptime
    - cat cd_gcloud_vm.sh | ssh -tt -i ~/.ssh/google_compute_engine.pub root@$UBUNTU_2_IP
    # start the node 2
# when: manual

gcloud_ubuntu_3_deploy_job:
  stage: deploy
  only:
    - develop 
    - release
    - master
    - github_master
    - features/ci_test
  variables:
     GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD
    - git submodule update --init --recursive
    - cd -
  script:
    - apt-get update --yes
    - apt-get --yes install python2.7
    - apt-get --yes install findutils
    - apt-get --yes install python-boto
    - apt-get --yes install python-pkg-resources
    - apt-get --yes install python-crcmod
    - wget -c http://archive.ubuntu.com/ubuntu/pool/universe/g/gce-compute-image-packages/python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb -O python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - dpkg -i python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - wget -c http://archive.canonical.com/ubuntu/pool/partner/g/google-cloud-sdk/google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb -O google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - export GPG_TTY=$(tty)
    - echo "export GPG_TTY=$(tty)" >> ~/.profile
    - dpkg -i google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - echo $GLOUD_KEY > $UBUNTU_JSON
    - gcloud auth activate-service-account --key-file $UBUNTU_JSON
    - head -n -2 ~/.profile > file.txt.new && mv file.txt.new ~/.profile
    - echo "tty -s && mesg n || true" | tee -a ~/.profile
    - echo "export GPG_TTY=not a tty" | tee -a ~/.profile
    - cat ~/.profile
    - gcloud compute --project $GCLOUD_PROJECT_ID ssh --zone $GCLOUD_VM_3_ZONE $GCLOUD_VM_3
    - whoami
    - pwd
    - apt-get --yes install ssh
    - ls -la ~/.ssh
    - ls -la /etc/ssh/
    - cat ~/.ssh/google_compute_engine
    - cat ~/.ssh/google_compute_engine.pub
    - ssh-keygen -f ~/.ssh/known_hosts
    - eval `ssh-agent -s`
    - ssh-add -k ~/.ssh/google_compute_engine
    - ssh -o StrictHostKeyChecking=no root@$UBUNTU_3_IP uptime
    - cat cd_gcloud_vm.sh | ssh -tt -i ~/.ssh/google_compute_engine.pub root@$UBUNTU_3_IP
    # start the node 3
# when: manual


gcloud_ubuntu_4_deploy_job:
  stage: deploy
  only:
    - develop 
    - release
    - master
    - github_master
    - features/ci_test
  variables:
     GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD
    - git submodule update --init --recursive
    - cd -
  script:
    - apt-get update --yes
    - apt-get --yes install python2.7
    - apt-get --yes install findutils
    - apt-get --yes install python-boto
    - apt-get --yes install python-pkg-resources
    - apt-get --yes install python-crcmod
    - wget -c http://archive.ubuntu.com/ubuntu/pool/universe/g/gce-compute-image-packages/python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb -O python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - dpkg -i python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - wget -c http://archive.canonical.com/ubuntu/pool/partner/g/google-cloud-sdk/google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb -O google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - export GPG_TTY=$(tty)
    - echo "export GPG_TTY=$(tty)" >> ~/.profile
    - dpkg -i google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - echo $GLOUD_KEY > $UBUNTU_JSON
    - gcloud auth activate-service-account --key-file $UBUNTU_JSON
    - head -n -2 ~/.profile > file.txt.new && mv file.txt.new ~/.profile
    - echo "tty -s && mesg n || true" | tee -a ~/.profile
    - echo "export GPG_TTY=not a tty" | tee -a ~/.profile
    - cat ~/.profile
    - gcloud compute --project $GCLOUD_PROJECT_ID ssh --zone $GCLOUD_VM_4_ZONE $GCLOUD_VM_4
    - whoami
    - pwd
    - apt-get --yes install ssh
    - ls -la ~/.ssh
    - ls -la /etc/ssh/
    - cat ~/.ssh/google_compute_engine
    - cat ~/.ssh/google_compute_engine.pub
    - ssh-keygen -f ~/.ssh/known_hosts
    - eval `ssh-agent -s`
    - ssh-add -k ~/.ssh/google_compute_engine
    - ssh -o StrictHostKeyChecking=no root@$UBUNTU_4_IP uptime
    - cat cd_gcloud_vm.sh | ssh -tt -i ~/.ssh/google_compute_engine.pub root@$UBUNTU_4_IP
    # start the node 4
# when: manual


gcloud_ubuntu_5_deploy_job:
  stage: deploy
  only:
    - develop 
    - release
    - master
    - github_master
    - features/ci_test
  variables:
     GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD
    - git submodule update --init --recursive
    - cd -
  script:
    - apt-get update --yes
    - apt-get --yes install python2.7
    - apt-get --yes install findutils
    - apt-get --yes install python-boto
    - apt-get --yes install python-pkg-resources
    - apt-get --yes install python-crcmod
    - wget -c http://archive.ubuntu.com/ubuntu/pool/universe/g/gce-compute-image-packages/python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb -O python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - dpkg -i python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - wget -c http://archive.canonical.com/ubuntu/pool/partner/g/google-cloud-sdk/google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb -O google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - export GPG_TTY=$(tty)
    - echo "export GPG_TTY=$(tty)" >> ~/.profile
    - dpkg -i google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - echo $GLOUD_KEY > $UBUNTU_JSON
    - gcloud auth activate-service-account --key-file $UBUNTU_JSON
    - head -n -2 ~/.profile > file.txt.new && mv file.txt.new ~/.profile
    - echo "tty -s && mesg n || true" | tee -a ~/.profile
    - echo "export GPG_TTY=not a tty" | tee -a ~/.profile
    - cat ~/.profile
    - gcloud compute --project $GCLOUD_PROJECT_ID ssh --zone $GCLOUD_VM_5_ZONE $GCLOUD_VM_5
    - whoami
    - pwd
    - apt-get --yes install ssh
    - ls -la ~/.ssh
    - ls -la /etc/ssh/
    - cat ~/.ssh/google_compute_engine
    - cat ~/.ssh/google_compute_engine.pub
    - ssh-keygen -f ~/.ssh/known_hosts
    - eval `ssh-agent -s`
    - ssh-add -k ~/.ssh/google_compute_engine
    - ssh -o StrictHostKeyChecking=no root@$UBUNTU_5_IP uptime
    - cat cd_gcloud_vm.sh | ssh -tt -i ~/.ssh/google_compute_engine.pub root@$UBUNTU_5_IP
    # start the node 5
# when: manual


gcloud_ubuntu_6_deploy_job:
  stage: deploy
  only:
    - develop 
    - release
    - master
    - github_master
    - features/ci_test
  variables:
     GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - cd /builds/locktrip.gcloud/LockTrip-Dev-Team-CI-CD
    - git submodule update --init --recursive
    - cd -
  script:
    - apt-get update --yes
    - apt-get --yes install python2.7
    - apt-get --yes install findutils
    - apt-get --yes install python-boto
    - apt-get --yes install python-pkg-resources
    - apt-get --yes install python-crcmod
    - wget -c http://archive.ubuntu.com/ubuntu/pool/universe/g/gce-compute-image-packages/python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb -O python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - dpkg -i python-google-compute-engine_20180905+dfsg1-0ubuntu1~18.04.0_all.deb
    - wget -c http://archive.canonical.com/ubuntu/pool/partner/g/google-cloud-sdk/google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb -O google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - export GPG_TTY=$(tty)
    - echo "export GPG_TTY=$(tty)" >> ~/.profile
    - dpkg -i google-cloud-sdk_212.0.0-0ubuntu1~18.04.0_all.deb
    - echo $GLOUD_KEY > $UBUNTU_JSON
    - gcloud auth activate-service-account --key-file $UBUNTU_JSON
    - head -n -2 ~/.profile > file.txt.new && mv file.txt.new ~/.profile
    - echo "tty -s && mesg n || true" | tee -a ~/.profile
    - echo "export GPG_TTY=not a tty" | tee -a ~/.profile
    - cat ~/.profile
    - gcloud compute --project $GCLOUD_PROJECT_ID ssh --zone $GCLOUD_VM_6_ZONE $GCLOUD_VM_6
    - whoami
    - pwd
    - apt-get --yes install ssh
    - ls -la ~/.ssh
    - ls -la /etc/ssh/
    - cat ~/.ssh/google_compute_engine
    - cat ~/.ssh/google_compute_engine.pub
    - ssh-keygen -f ~/.ssh/known_hosts
    - eval `ssh-agent -s`
    - ssh-add -k ~/.ssh/google_compute_engine
    - ssh -o StrictHostKeyChecking=no root@$UBUNTU_6_IP uptime
    - cat cd_gcloud_vm.sh | ssh -tt -i ~/.ssh/google_compute_engine.pub root@$UBUNTU_6_IP
    # start the node 6
# when: manual



cleanup_job:
  stage: cleanup
  script:
    - rm -rf tmp/*
  when: always

